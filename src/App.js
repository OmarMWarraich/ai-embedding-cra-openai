import React, { useState, useEffect } from 'react';
import OpenAI from 'openai';
import { createClient } from "@supabase/supabase-js";
import podcasts from './content';
import './App.css';

const App = () => {
  const [embedding, setEmbedding] = useState([]);

  const openai = new OpenAI({
    apiKey: process.env.REACT_APP_OPENAI_API_KEY,
    dangerouslyAllowBrowser: true,
  });

  const privateKey = process.env.REACT_APP_SUPABASE_API_KEY;
  const url = process.env.REACT_APP_SUPABASE_URL;
  const supabase = createClient(url, privateKey);

  const query = "Jammin' in the Big Easy";
  
  async function main(input) {
    // Create a vector embedding representing the input text
    const embeddingResponse = await openai.embeddings.create({
      model: "text-embedding-ada-002",
      input,
    }); 
    
    // The vector generated by OpenAI
    const embeddingRes = embeddingResponse.data[0].embedding;

    const { data } = await supabase.rpc('match_documents', {
      query_embedding: embeddingRes,
      match_threshold: 0.50,
      match_count: 3
    });
    console.log(data);
    setEmbedding(data)
      
    }
  



  useEffect(() => {
    let isMounted = true;  
      if (isMounted) {
        main(query);
      }
    return () => { isMounted = false };
  }, []);

  return (
    <div className="App">
      {embedding.map((item, index) => (
        <div key={index}>
          <h1>{item.content}</h1>
          <p>{item.similarity}</p>
        </div>
      ))}
    </div>
  );
};

export default App;
